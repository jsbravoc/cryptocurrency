const crypto=require("crypto"),_=require("lodash"),{TYPE,TRANSACTION_FAMILY_VERSION,TRANSACTION_FAMILY}=require("./utils/constants"),{logFormatted,SEVERITY}=require("./utils/logger"),{InvalidTransaction,InternalError}=require("sawtooth-sdk/processor/exceptions"),{inputValidation,postTxValidationChain,putTxValidationChain}=require("./validators/cryptocurrency"),{postTransaction}=require("./controllers/cryptocurrency"),{postUser}=require("./controllers/users"),{PREFIX}=require("./controllers/common"),handlers={[TYPE.TRANSACTION]:{async post(t,a){logFormatted(`Handling post transaction with address ${a.address}`,SEVERITY.NOTIFY);try{await postTxValidationChain(t,a),await postTransaction(t,a)}catch(t){throw new InvalidTransaction(t)}},async put(t,a){logFormatted(`Handling put transaction with address ${a.address}`,SEVERITY.NOTIFY);try{await putTxValidationChain(t,a),await postTransaction(t,a)}catch(t){throw new InvalidTransaction(t)}}},[TYPE.USER]:{async post(t,a){logFormatted(`Handling post user with address ${a.address}`,SEVERITY.NOTIFY),await postUser(t,a)},async put(t,a){logFormatted(`Handling put user with address ${a.address}`,SEVERITY.NOTIFY),await postUser(t,a)}}};module.exports={TP_FAMILY:TRANSACTION_FAMILY,TP_VERSION:TRANSACTION_FAMILY_VERSION,TP_NAMESPACE:PREFIX,handlers:handlers};