const crypto=require("crypto"),{ADDRESS_PREFIX,HTTP_METHODS,TYPE,TRANSACTION_FAMILY}=require("../utils/constants"),_=require("lodash"),{InvalidTransaction,InternalError}=require("sawtooth-sdk/processor/exceptions"),hash512=t=>crypto.createHash("sha512").update(t).digest("hex"),getAddress=(t,e=64)=>hash512(t).slice(0,e),PREFIX=getAddress(TRANSACTION_FAMILY,6),getTransactionAddress=t=>PREFIX+ADDRESS_PREFIX.TRANSACTION+getAddress(t,62),getUserAddress=t=>PREFIX+ADDRESS_PREFIX.USER+getAddress(t,62);async function getRawState(t,e,r){e=(await t.getState([e],r))[e];return e&&0!=e.length?e:null}async function getState(t,e,r,a){a=await getRawState(t,e(r),a);if(!_.isUndefined(a)){a=JSON.parse(Buffer.from(a,"utf8").toString());if(!_.isArray(a))throw new InternalError("State Error");a=_.find(a,t=>t.key===r);return a?a.value:void 0}}async function putState(t,e,r,a,s){if(0===(await t.setState({[e(r)]:Buffer.from(JSON.stringify(a),"utf8")},s)).length)throw new InternalError("State Error!")}async function deleteState(t,e,r,a){var s=await getRawState(t,e(r),a);if(!_.isUndefined(s)){var s=JSON.parse(Buffer.from(s,"utf8").toString());if(!_.isArray(s))throw new InternalError("State Error");if(0<(s=_.filter(s,t=>t.key!==r)).length){if(0===(await t.setState({[e(r)]:Buffer.from(JSON.stringify(s),"utf8")},a)).length)throw new InternalError("State Error!")}else if(0===(await t.deleteState([e(r)],a)).length)throw new InternalError("State Error!")}}module.exports.PREFIX=PREFIX,module.exports.hash512=hash512,module.exports.getRawState=getRawState,module.exports.getTransactionAddress=getTransactionAddress,module.exports.getUserAddress=getUserAddress;