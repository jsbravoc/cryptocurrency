"use strict";const{TransactionHandler}=require("sawtooth-sdk/processor/handler"),{InvalidTransaction,InternalError}=require("sawtooth-sdk/processor/exceptions");module.exports=function({TP_FAMILY:e,TP_VERSION:r,TP_NAMESPACE:t,handlers:a}){class o extends TransactionHandler{constructor(){super(e,[r],[t])}async apply(e,r){let t,o,n;try{o=JSON.parse(Buffer.from(e.payload,"utf8").toString()),t=o.httpMethod.toLowerCase(),n=o.type,delete o.httpMethod,delete o.type}catch(e){throw console.error("Transaction payload format error",e),new InvalidTransaction("Transaction payload format error",e.message)}if(!a[n])throw console.log("Transaction object type error",o),console.error(`Transaction type error, missing ${n}, expected type between ${Object.keys(a)}`),new InvalidTransaction(`Transaction type error, missing ${n}, expected type between ${Object.keys(a)}`);try{await a[n][t](r,o)}catch(e){if(console.log("ERROR during:",e),!(e instanceof InternalError))throw e;console.log(e)}}}return o};