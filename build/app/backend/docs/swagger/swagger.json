{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0.1",
        "title": "CNK Cryptocurrency",
        "description": "API to manage CNK cryptocurrency",
        "contact": {
            "name": "Juan Sebasti√°n Bravo",
            "email": "js.bravo@uniandes.edu.co",
            "url": "jsbravoc.github.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        }
    ],
    "tags": [
        {
            "name": "users",
            "description": "User creation and retrieval",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "cryptocurrency",
            "description": "Transaction creation and management",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        }
    ],
    "paths": {
        "/user": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Retrieves all users and their transactions",
                "operationId": "getUsers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Retrieves all the users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/ArrayOfExtendedUsers"
                                }
                            }
                        }
                    }
                },
                "403": {
                    "description": "Unauthorized"
                },
                "405": {
                    "description": "Invalid input"
                },
                "500": {
                    "description": "Internal server error"
                },
                "503": {
                    "description": "Sawtooth service unavailable"
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Creates a new user",
                "operationId": "addUser",
                "requestBody": {
                    "description": "User to create in the system",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ExtendedUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created user successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/ExtendedUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            }
        },
        "/user/{address}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Retrieves one specific user",
                "operationId": "getUserByAddress",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "The address of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "public_key"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves the user and their public key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/ExtendedUserWithTransactions"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Updates one specific user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "The address of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "public_key"
                        }
                    },
                    {
                        "in": "query",
                        "name": "action",
                        "description": "The action to execute to the user",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "activate",
                            "deactivate"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updates user information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/ExtendedUser"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "description": "Deletes one specific user and transfers CNKs to another user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "The address of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "public_key"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Who will receive all the CNKs from the deleted user. If it is not specified, CNKs will return to return_to address.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "The user was deleted and the user's CNKs were transferred successfully."
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            }
        },
        "/cryptocurrency": {
            "get": {
                "tags": [
                    "cryptocurrency"
                ],
                "summary": "Retrieves all users, lastest transactions and balance",
                "operationId": "getCryptocurrency",
                "parameters": [
                    {
                        "name": "expanded",
                        "in": "query",
                        "description": "Expand recursively the transactions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "format": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "hidePending",
                        "in": "query",
                        "description": "Hide pending transactions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "format": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "hideInvalid",
                        "in": "query",
                        "description": "Hide invalid transactions",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "format": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit queried transactions",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the cryptocurrency flow.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Transaction array": {
                                        "$ref": "#/examples/NonExpandedTransaction"
                                    },
                                    "Expanded transaction array": {
                                        "$ref": "#/examples/ExpandedTransaction"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "cryptocurrency"
                ],
                "summary": "Creates a new transaction",
                "operationId": "addTransaction",
                "requestBody": {
                    "description": "New transaction to add to the blockchain",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/SimpleTransaction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created with supporting transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Transaction"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created as a coinbase transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/ExtendedCoinbaseTransaction"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            }
        },
        "/cryptocurrency/{address}": {
            "get": {
                "tags": [
                    "cryptocurrency"
                ],
                "summary": "Retrieves one specific transaction",
                "operationId": "getTransactionByAddress",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "The ID of the transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "sha_256"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves the specified transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Transaction"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
                
            },
            "put": {
                "tags": [
                    "cryptocurrency"
                ],
                "summary": "Approves or rejects a transaction",
                "operationId": "modifyTransaction",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "The ID of the transaction to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "sha_256"
                        }
                    },
                    {
                        "in": "query",
                        "name": "action",
                        "description": "The action to execute to the transaction",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "approve",
                            "reject"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/ExtendedTransaction"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Sawtooth service unavailable"
                    }
                }
            }
        }
    },
    "definitions": {
        "SimpleTransaction": {
            "type": "object",
            "required": [
                "amount",
                "sender"
            ],
            "properties": {
                "sender": {
                    "type": "number",
                    "format": "double",
                    "example": "js.bravo"
                },
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8"
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo2"
                },
                "pending": {
                    "type": "boolean",
                    "format": "boolean",
                    "example": false
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "0xc79eec8f62d09794feeb0677f2330d70cee5c640a03b2f35e508f8fe12140ff8754d37904ed443d942363ad3ebbd5f006536794f4110355343c0b91f4f2a48221b"
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "required": [
                "sender",
                "amount",
                "recipient"
            ],
            "properties": {
                "sender": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo"
                },
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8",
                    "minimum": 0
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo2"
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid": {
                    "type": "boolean",
                    "format": "string",
                    "example": "true"
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "0xc79eec8fsa979saeeb8477f2330d70cee5c640a03b2f35e508dase12140ff8as4d37904ed443d942363ac3ebbd5f006536794f4110355553d08ff658ta5414fs"
                },
                "supporting_transactions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "string",
                        "example": "0xc79eec8f62d09794feeb0677f2330d70cee5c640a03b2f35e508f8fe12140ff8754d37904ed443d942363ad3ebbd5f006536794f4110355343c0b91f4f2a48221b"
                    }
                }
            }
        },
        "NonExpandedTransaction": {
            "type": "object",
            "required": [
                "sender",
                "amount",
                "recipient"
            ],
            "properties": {
                "sender": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo"
                },
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8",
                    "minimum": 0
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo2"
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid": {
                    "type": "boolean",
                    "format": "string",
                    "example": "true"
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "0xc79eec8fsa979saeeb8477f2330d70cee5c640a03b2f35e508dase12140ff8as4d37904ed443d942363ac3ebbd5f006536794f4110355553d08ff658ta5414fs"
                },
                "supporting_transactions": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "string",
                        "example": "0xc79eec8f62d09794feeb0677f2330d70cee5c640a03b2f35e508f8fe12140ff8754d37904ed443d942363ad3ebbd5f006536794f4110355343c0b91f4f2a48221b"
                    }
                }
            }
        },
        "ExpandedTransaction": {
            "type": "object",
            "required": [
                "sender",
                "amount",
                "recipient"
            ],
            "properties": {
                "sender": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo"
                },
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8",
                    "minimum": 0
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo2"
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                },
                "valid": {
                    "type": "boolean",
                    "format": "string",
                    "example": "true"
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "0xc79eec8fsa979saeeb8477f2330d70cee5c640a03b2f35e508dase12140ff8as4d37904ed443d942363ac3ebbd5f006536794f4110355553d08ff658ta5414fs"
                },
                "supporting_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpandedTransaction"
                    }
                }
            }
        },
        "CoinbaseTransaction": {
            "type": "object",
            "required": [
                "amount",
                "recipient"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8"
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "jsbravoc"
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "TransactionWithId": {
            "type": "object",
            "required": [
                "sender",
                "amount",
                "recipient"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "example": "7bb348fa-e8ca-4cbb-9867-c027cc387b55"
                },
                "sender": {
                    "type": "string",
                    "format": "string",
                    "example": "juan.bravo"
                },
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8"
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "jsbravoc"
                },
                "valid": {
                    "type": "boolean",
                    "format": "string",
                    "example": "true"
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                },
                "approver": {
                    "type": "string",
                    "format": "string",
                    "example": "my.approver"
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79"
                }
            }
        },
        "ExtendedTransaction": {
            "type": "object",
            "required": [
                "id",
                "sender",
                "amount",
                "recipient",
                "valid",
                "supporting_transactions"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "string",
                    "example": "bf000a52-6e7b-4d69-95c4-6f9e8318996b"
                },
                "sender": {
                    "type": "string",
                    "format": "string",
                    "example": "jsbravoc"
                },
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8"
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "juan.bravo"
                },
                "valid": {
                    "type": "boolean",
                    "format": "string",
                    "example": "false"
                },
                "supporting_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionWithId"
                    }
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                },
                "approver": {
                    "type": "string",
                    "format": "string",
                    "example": "my.approver"
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79"
                }
            }
        },
        "ArrayOfExtendedTransactions": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ExtendedTransaction"
            }
        },
        "ExtendedCoinbaseTransaction": {
            "type": "object",
            "required": [
                "amount",
                "recipient",
                "valid",
                "signature"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double",
                    "example": "2.8"
                },
                "recipient": {
                    "type": "string",
                    "format": "string",
                    "example": "juan.bravo"
                },
                "valid": {
                    "type": "boolean",
                    "format": "boolean",
                    "example": true
                },
                "valid_thru": {
                    "type": "string",
                    "format": "date-time"
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "0xc79eec8fsa979saeeb8477f2330d70cee5c640a03b2f35e508dase12140ff8as4d37904ed443d942363ac3ebbd5f006536794f4110355553d08ff658ta5414fs"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo"
                },
                "return_to": {
                    "type": "string",
                    "format": "string",
                    "example": "depto_sistemas"
                }
            }
        },
        "ExtendedUser": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "format": "boolean"
                },
                "return_to": {
                    "type": "string",
                    "format": "string",
                    "example": "depto_sistemas"
                },
                "balance": {
                    "type": "number",
                    "format": "double",
                    "example": 2.9
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo"
                },
                "public_key": {
                    "type": "string",
                    "format": "string",
                    "example": "0x06A85356DCb5b307096726FB86A78c59D38e08ee"
                }
            }
        },
        "ArrayOfExtendedUsers": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ExtendedUser"
            }
        },
        "ExtendedUserWithTransactions": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "format": "boolean"
                },
                "return_to": {
                    "type": "string",
                    "format": "string",
                    "example": "depto_sistemas"
                },
                "balance": {
                    "type": "number",
                    "format": "double",
                    "example": 0
                },
                "address": {
                    "type": "string",
                    "format": "string",
                    "example": "js.bravo"
                },
                "public_key": {
                    "type": "string",
                    "format": "string",
                    "example": 3.800772969568567e+46
                },
                "lastest_transactions": {
                    "$ref": "#/definitions/ArrayOfExtendedTransactions"
                }
            }
        },
        "ArrayOfExtendedUserWithTransactions": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ExtendedUserWithTransactions"
            }
        }
    },
    "examples": {
        "NonExpandedTransaction": {
            "value": {
                "sender": "js.bravo",
                "amount": "2.8",
                "recipient": "js.bravo2",
                "valid": true,
                "signature": "0xc79eec8fsa979saeeb8477f2330d70cee5c640a03b2f35e508dase12140ff8as4d37904ed443d942363ac3ebbd5f006536794f4110355553d08ff658ta5414fs",
                "supporting_transactions": [
                    "0xc79eec8f62d09794feeb0677f2330d70cee5c640a03b2f35e508f8fe12140ff8754d37904ed443d942363ad3ebbd5f006536794f4110355343c0b91f4f2a48221b"
                ]
            }
        },
        "ExpandedTransaction": {
            "value": {
                "sender": "js.bravo2",
                "amount": "1.8",
                "recipient": "js.bravo2",
                "valid": true,
                "signature": "0xc79eec8fsa979saeeb8477f2330d70cee5c640a03b2f35e508dase12140ff8as4d37904ed443d942363ac3ebbd5f006536794f4110355553d08ff658ta5414fs",
                "supporting_transactions": [
                    {
                        "recipient": "js.bravo",
                        "amount": 100,
                        "valid": true,
                        "signature": "0xc79eec8f62d09794feeb0677f2330d70cee5c640a03b2f35e508f8fe12140ff8754d37904ed443d942363ad3ebbd5f006536794f4110355343c0b91f4f2a48221b"
                    }
                ]
            }
        },
        "CoinbaseTransaction": {
            "value": {
                "recipient": "js.bravo",
                "amount": 100,
                "valid": true,
                "signature": "0xc79eec8f62d09794feeb0677f2330d70cee5c640a03b2f35e508f8fe12140ff8754d37904ed443d942363ad3ebbd5f006536794f4110355343c0b91f4f2a48221b"
            }
        }
    }
}