const{findByAddress,findAllObjects,buildObjectTransaction,putBatch}=require("../controllers/common"),{TYPE,HTTP_METHODS}=require("../utils/constants"),{logFormatted,SEVERITY}=require("../utils/logger"),{createError}=require("../validators/common"),{ERRORS}=require("../utils/errors"),updateInvalidTransaction=(a,r)=>findByAddress(TYPE.TRANSACTION,a,!1,r).then(a=>a&&(!a.pending&&a.checkValidity()!==a.valid||a.pending&&!a.checkValidity())?(a.valid=a.checkValidity(),{transactionObj:a,txObj:buildObjectTransaction(TYPE.TRANSACTION,HTTP_METHODS.PUT,a)}):null),updateInvalidUserTransactions=(a,r,i)=>findByAddress(TYPE.USER,a,!1,i).then(n=>{const e=[],t=[];let s=!1;return n&&((Array.isArray(r)&&0<r.length?(n.latest_transactions||[]).filter(a=>-1<r.indexOf(a)):n.latest_transactions||[]).forEach(a=>{e.push(updateInvalidTransaction(a,i).then(a=>{var r;a&&({transactionObj:r,txObj:a}=a,s=!0,n.removeInvalidTransaction(r),t.push(a))}))}),(Array.isArray(r)&&0<r.length?(n.pending_transactions||[]).filter(a=>-1<r.indexOf(a)):n.pending_transactions||[]).forEach(r=>{e.push(updateInvalidTransaction(r,i).then(a=>{a&&({txObj:a}=a,s=!0,n.removePendingTransaction(r),t.push(a))}))})),Promise.all(e).then(()=>(s&&t.push(buildObjectTransaction(TYPE.USER,HTTP_METHODS.PUT,n)),t))}),updateInvalidUsersTransactions=(n,a=null,e=null,t)=>{const s=[],r=[];return Array.isArray(a)&&0<a.length?a.forEach(a=>{r.push(findByAddress(TYPE.USER,a,!1,t))}):(logFormatted("Warning: Enforcer called without users query parameter, increasing load significantly",SEVERITY.WARN),r.push(findAllObjects(TYPE.USER,n,void 0,!1,t))),Promise.all(r).then(a=>{const r=[].concat.apply([],a);return r.forEach(a=>{a.address&&s.push(updateInvalidUserTransactions(a.address,e,t))}),Promise.all(s).then(a=>{a=[].concat.apply([],a);if(0<a.length)return putBatch(HTTP_METHODS.PUT,n,a)})})},enforceValidTransactionsMiddleware=(r,n,a)=>{let e,t;return r.query.users&&(e=r.query.users.split(",")),r.query.transactions&&(t=r.query.transactions.split(",")),updateInvalidUsersTransactions("[ENFORCER]",e,t,n).then(()=>a()).catch(a=>(logFormatted("Enforcer failed with error",SEVERITY.ERROR,a.errno||a.message),createError(r,n,{error:ERRORS.SAWTOOTH.UNAVAILABLE,statusCode:503,noLocation:!0})))};module.exports.updateInvalidTransaction=updateInvalidTransaction,module.exports.updateInvalidUserTransactions=updateInvalidUserTransactions,module.exports.updateInvalidUsersTransactions=updateInvalidUsersTransactions,module.exports.enforceValidTransactionsMiddleware=enforceValidTransactionsMiddleware;