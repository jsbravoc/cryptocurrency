const _=require("lodash"),secp256k1=require("secp256k1"),crypto=require("crypto"),{protobuf}=require("sawtooth-sdk"),axios=require("axios");axios.defaults.timeout=1e4;const privateKey=Buffer.from(process.env.SAWTOOTH_PRIVATE_KEY.slice(2),"hex"),publicKey=secp256k1.publicKeyCreate(privateKey),publicKeyHex=Buffer.from(publicKey).toString("hex"),hash512=e=>crypto.createHash("sha512").update(e).digest("hex"),hash256=e=>crypto.createHash("sha256").update(e).digest("hex"),sign=(e,r)=>{e=hash256(e);return Buffer.from(secp256k1.ecdsaSign(Uint8Array.from(Buffer.from(e,"hex")),Uint8Array.from(r)).signature).toString("hex")};function buildTransaction(e,r,t,a,i){i=Buffer.from(i,"utf8"),t=protobuf.TransactionHeader.encode({familyName:e,familyVersion:r,inputs:t,outputs:a,signerPublicKey:publicKeyHex,batcherPublicKey:publicKeyHex,dependencies:[],payloadSha512:hash512(i),nonce:crypto.randomBytes(32).toString("hex")}).finish(),a=sign(t,privateKey);return protobuf.Transaction.create({header:t,headerSignature:a,payload:i})}function buildBatch(e){var r=protobuf.BatchHeader.encode({signerPublicKey:publicKeyHex,transactionIds:e.map(e=>e.headerSignature)}).finish(),t=sign(r,privateKey),e=protobuf.Batch.create({header:r,headerSignature:t,transactions:e});return protobuf.BatchList.encode({batches:[e]}).finish()}module.exports.sendTransaction=async function(e){var r=buildBatch(_.map(e,e=>{var{transactionFamily:r,transactionFamilyVersion:t,inputs:a,outputs:i,payload:e}=e;return buildTransaction(r,t,a,i,e)})),e={headers:{"Content-Type":"application/octet-stream"},timeout:isNaN(Number(process.env.SAWTOOTH_REST_TIMEOUT))?5e3:Number(process.env.SAWTOOTH_REST_TIMEOUT)};return axios.post(`${process.env.SAWTOOTH_REST}/batches`,r,e)},module.exports.queryState=e=>{return axios.get(`${process.env.SAWTOOTH_REST}/state/${e}`,{headers:{"Content-Type":"application/json"}}).then(e=>{const r=Buffer.from(e.data.data,"base64");return JSON.parse(r.toString("utf8"))})};