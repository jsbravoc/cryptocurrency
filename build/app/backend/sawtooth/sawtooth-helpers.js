/*! cryptocurrency 2021-05-07 */
const _=require("lodash"),secp256k1=require("secp256k1"),crypto=require("crypto"),{protobuf}=require("sawtooth-sdk"),axios=require("axios");axios.defaults.timeout=1e4;const privateKey=Buffer.from((process.env.SAWTOOTH_PRIVATE_KEY||"0x7f664d71e4200b4a2989558d1f6006d0dac9771a36a546b1a47c384ec9c4f04b").slice(2),"hex"),publicKey=secp256k1.publicKeyCreate(privateKey),publicKeyHex=Buffer.from(publicKey).toString("hex"),hash512=e=>crypto.createHash("sha512").update(e).digest("hex"),hash256=e=>crypto.createHash("sha256").update(e).digest("hex"),getAddress=(e,t)=>{return hash512(e).substring(0,6)+hash512(t).slice(-64)},sign=(e,t)=>{e=hash256(e);return Buffer.from(secp256k1.ecdsaSign(Uint8Array.from(Buffer.from(e,"hex")),Uint8Array.from(t)).signature).toString("hex")};function buildTransaction(e,t,a,r,s){s=Buffer.from(s,"utf8"),a=protobuf.TransactionHeader.encode({familyName:e,familyVersion:t,inputs:a,outputs:r,signerPublicKey:publicKeyHex,batcherPublicKey:publicKeyHex,dependencies:[],payloadSha512:hash512(s),nonce:crypto.randomBytes(32).toString("hex")}).finish(),r=sign(a,privateKey);return protobuf.Transaction.create({header:a,headerSignature:r,payload:s})}function buildBatch(e){var t=protobuf.BatchHeader.encode({signerPublicKey:publicKeyHex,transactionIds:e.map(e=>e.headerSignature)}).finish(),a=sign(t,privateKey),e=protobuf.Batch.create({header:t,headerSignature:a,transactions:e});return protobuf.BatchList.encode({batches:[e]}).finish()}module.exports.getAddress=getAddress,module.exports.sendTransaction=async function(e,t){e=buildBatch(_.map(e,e=>{var{transactionFamily:t,transactionFamilyVersion:a,inputs:r,outputs:s,payload:e}=e;return buildTransaction(t,a,r,s,e)}));const a={headers:{"Content-Type":"application/octet-stream"},timeout:process.env.SAWTOOTH_REST_TIMEOUT||5e3};return t&&(a.cancelToken=t),axios.post(`${process.env.SAWTOOTH_REST||`http://${LOCAL_ADDRESS}:8008`}/batches`,e,a)},module.exports.queryState=async function(e,t){const a={headers:{"Content-Type":"application/json"}};t&&(a.cancelToken=t);let r;try{r=await axios.get(`http://localhost:8008/state/${e}`,a)}catch(e){return null}if(!r||!r.data||!r.data.data)return null;const s=Buffer.from(r.data.data,"base64");return JSON.parse(s.toString("utf8"))};const{LOCAL_ADDRESS}=require("../utils/constants");