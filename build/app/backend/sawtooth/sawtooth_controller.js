const secp256k1=require("secp256k1"),crypto=require("crypto"),{protobuf}=require("sawtooth-sdk"),axios=require("axios"),SawtoothBatch=require("../models/SawtoothBatch"),hash512=e=>crypto.createHash("sha512").update(e).digest("hex"),hash256=e=>crypto.createHash("sha256").update(e).digest("hex"),privateKey=Buffer.from(process.env.SAWTOOTH_PRIVATE_KEY.slice(2),"hex"),publicKey=secp256k1.publicKeyCreate(privateKey),publicKeyHex=Buffer.from(publicKey).toString("hex"),sign=(e,t)=>{e=hash256(e);return Buffer.from(secp256k1.ecdsaSign(Uint8Array.from(Buffer.from(e,"hex")),Uint8Array.from(t)).signature).toString("hex")},buildTransaction=({transactionFamily:e,transactionFamilyVersion:t,inputs:a,outputs:r,payload:o})=>{o=Buffer.from(o,"utf8"),a=protobuf.TransactionHeader.encode({familyName:e,familyVersion:t,inputs:a,outputs:r,signerPublicKey:publicKeyHex,batcherPublicKey:publicKeyHex,dependencies:[],payloadSha512:hash512(o),nonce:crypto.randomBytes(32).toString("hex")}).finish(),r=sign(a,privateKey);return protobuf.Transaction.create({header:a,headerSignature:r,payload:o})},buildBatch=({transactions:e})=>{var t=protobuf.BatchHeader.encode({signerPublicKey:publicKeyHex,transactionIds:e.map(e=>e.headerSignature)}).finish(),a=sign(t,privateKey);return protobuf.Batch.create({header:t,headerSignature:a,transactions:e})},sendBatch=e=>{e=e.map(e=>buildTransaction({...e}));var t=buildBatch(new SawtoothBatch({transactions:e})),e=protobuf.BatchList.encode({batches:[t]}).finish(),t={headers:{"Content-Type":"application/octet-stream"},timeout:isNaN(Number(process.env.SAWTOOTH_REST_TIMEOUT))?5e3:Number(process.env.SAWTOOTH_REST_TIMEOUT)};return axios.post(`${process.env.SAWTOOTH_REST}/batches`,e,t)},queryState=e=>{return axios.get(`${process.env.SAWTOOTH_REST}/state/${e}`,{headers:{"Content-Type":"application/json"}}).then(e=>{const t=Buffer.from(e.data.data,"base64");return JSON.parse(t.toString("utf8"))})};module.exports.sendBatch=sendBatch,module.exports.queryState=queryState;