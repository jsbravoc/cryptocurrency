const _=require("lodash"),crypto=require("crypto"),{default:axios}=require("axios"),{ADDRESS_PREFIX,HTTP_METHODS,TYPE,TRANSACTION_FAMILY}=require("../utils/constants"),{SEVERITY,logFormatted}=require("../utils/logger"),{queryState,sendTransaction}=require("../sawtooth/sawtooth-helpers"),Transaction=require("../models/Transaction"),User=require("../models/User"),SawtoothTransaction=require("../models/SawtoothTransaction"),hash512=e=>crypto.createHash("sha512").update(e).digest("hex"),getAddress=(e,s=64)=>hash512(e).slice(0,s),PREFIX=getAddress(TRANSACTION_FAMILY,6),getTransactionAddress=e=>PREFIX+ADDRESS_PREFIX.TRANSACTION+getAddress(e,62),getUserAddress=e=>PREFIX+ADDRESS_PREFIX.USER+getAddress(e,62),findByAddress=(s,e,t=!1,a=null)=>{let r;switch(s){case TYPE.TRANSACTION:if(a&&a.locals&&a.locals.transaction&&a.locals.transaction[e])return Promise.resolve(new Transaction(a.locals.transaction[e]).toObject(t));r=getTransactionAddress(e);break;case TYPE.USER:if(a&&a.locals&&a.locals.user&&a.locals.user[e])return Promise.resolve(new User(a.locals.user[e]).toObject(t));r=getUserAddress(e)}return queryState(r).then(e=>{switch(s){case TYPE.TRANSACTION:a&&a.locals&&(a.locals.transaction||(a.locals.transaction={}),a.locals.transaction[e.address]=new Transaction(e)),e=new Transaction(e).toObject(t);break;case TYPE.USER:a&&a.locals&&(a.locals.user||(a.locals.user={}),a.locals.user[e.address]=new User(e)),e=new User(e).toObject(t)}return e}).catch(e=>e.response&&e.response.data&&e.response.data.error&&75===e.response.data.error.code?null:Promise.reject(e))},findAllObjects=(t,s,e=0,a=!1,r=null)=>{let o,n;switch(t){case TYPE.TRANSACTION:o="transaction",n=ADDRESS_PREFIX.TRANSACTION;break;case TYPE.USER:o="user",n=ADDRESS_PREFIX.USER}return axios.get(`${process.env.SAWTOOTH_REST}/state?address=${PREFIX+n}${0!==e?`&limit=${e}`:""}`,{headers:{"Content-Type":"application/json"}}).then(e=>{e=_.chain(e.data.data).filter(e=>!_.isEmpty(JSON.parse(Buffer.from(e.data,"base64")))).map(e=>{var s=JSON.parse(Buffer.from(e.data,"base64"));switch(t){case TYPE.TRANSACTION:return r&&(r.locals.transaction||(r.locals.transaction={}),r.locals.transaction[s.address]=new Transaction(s)),new Transaction(s).toObject(a);case TYPE.USER:return r&&(r.locals.user||(r.locals.user={}),r.locals.user[s.address]=new User(s)),new User(s).toObject(a)}}).flatten().value();return logFormatted(`${s} | Querying all ${o}s - ${e.length} ${o}${1!==e.length?"s":""} found`,0===e.length?SEVERITY.ERROR:SEVERITY.SUCCESS),e})},buildBatch=({inputs:e,outputs:s,payload:t},...a)=>{let r=[new SawtoothTransaction({inputs:e,outputs:s,payload:t})];return(a||[]).forEach(e=>r.push(buildBatch(e))),[].concat.apply([],r)},_putObject=(e,a,r,s)=>{let o;var t;let n,c;switch(t=s.address,o=s.toString(!1,a),e){case TYPE.TRANSACTION:c="Transaction",n=getTransactionAddress(t);break;case TYPE.USER:c="User",n=getUserAddress(t)}e=o,e=buildBatch({payload:e,inputs:[n],outputs:[n]});return logFormatted(`${r} | BATCH Request:`,SEVERITY.NOTIFY,...e),sendTransaction(e).then(e=>{logFormatted(`${r}  | BATCH Response: ${e.status} - ${e.statusText}`,SEVERITY.SUCCESS);var s=a===HTTP_METHODS.POST?201:200,e=`${c} ${a===HTTP_METHODS.POST?"created":"updated"}`;const t=JSON.parse(o);return delete t.type,delete t.httpMethod,{responseCode:s,msg:e,payload:t}})},buildObjectTransaction=(e,s,t)=>{let a,r,o;switch(e){case TYPE.TRANSACTION:r=t.address,a=t.toString(!1,s),o=getTransactionAddress(r);break;case TYPE.USER:r=t.address,a=t.toString(!1,s),o=getUserAddress(r)}e=a;return new SawtoothTransaction({payload:e,inputs:[o],outputs:[o]})},putBatch=(a,r,o)=>{const n=buildBatch(...o);return logFormatted(`${r} | BATCH Request:`,SEVERITY.NOTIFY,n),sendTransaction(n).then(e=>{logFormatted(`${r} | BATCH Response: ${e.status} - ${e.statusText}`,SEVERITY.SUCCESS);var s=a===HTTP_METHODS.POST?201:200,e=`Batch of ${o.length} transaction${1<o.length?"s":""} ${a===HTTP_METHODS.POST?"created":"updated"}`;const t=[];return n.forEach(e=>{const s=JSON.parse(e.payload);delete s.type,t.push(s)}),{responseCode:s,msg:e,payload:t}})},putObject=(e,s,t,a,r)=>{let o;return e===TYPE.USER&&(o=new User(a.body)),_putObject(e,s,t,o).then(({responseCode:e,msg:s,payload:t})=>r.status(e).json({msg:s,payload:t}))};module.exports.hash512=hash512,module.exports.getTransactionAddress=getTransactionAddress,module.exports.getUserAddress=getUserAddress,module.exports.findByAddress=findByAddress,module.exports.findAllObjects=findAllObjects,module.exports._putObject=_putObject,module.exports.buildObjectTransaction=buildObjectTransaction,module.exports.putBatch=putBatch,module.exports.putObject=putObject;